; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
;src_dir = ./examples/
lib_dir = .

[log]
none = 0
error = 1
warn = 2
info = 3
debug = 4
verbose = 5

; set the debug level for the entire project
level = ${log.debug}
;level = ${log.none}
;level = ${log.error}
;level = ${log.warn}
;level = ${log.info}
;level = ${log.debug}
;level = ${log.verbose}

default_esp32_level = -DCORE_DEBUG_LEVEL=${log.level}
default_esp8266_level = -DDEBUG_LEVEL=${log.level}

[env]
upload_speed = 115200
monitor_speed = 115200
lib_deps =
    gmag11/QuickEspNow@^0.8.1
build_src_filter = -<*> +<common/>

[esp32_common]
platform = espressif32
board = lolin_s2_mini
framework = arduino
lib_deps =
    ${env.lib_deps}
monitor_filters = time
board_build.f_cpu = 80000000L

[esp32_debug]
build_type = debug
build_flags =
    -DCORE_DEBUG_LEVEL=${log.debug}
    -DCONFIG_ARDUHAL_LOG_COLORS=1

[esp32_release]
build_type = debug
build_flags =
    -DCORE_DEBUG_LEVEL=${log.none}

[esp8266_common]
platform = espressif8266
board = d1_mini
framework = arduino
build_flags =
    ${log.default_esp8266_level} 
    -DCONFIG_ARDUHAL_LOG_COLORS=1
lib_deps =
    ${env.lib_deps}
monitor_filters = time

[s2mini]
board = lolin_s2_mini
upload_port = /dev/ttyACM0   # May change depending on what else is plugged in
monitor_port = /dev/serial/by-id/usb-WEMOS.CC_LOLIN-S2-MINI_0-if00

[d1mini]
board = d1_mini
upload_port = /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0
monitor_port = /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0

[env:gateway]
extends = esp8266_common, d1mini
build_src_filter = ${env.build_src_filter} +<gateway/>
lib_deps =
    ${esp8266_common.lib_deps}
    heman/AsyncMqttClient-esphome@^2.0.0
    johboh/nlohmann-json@^3.11.3

[sensor]
extends= esp32_common, s2mini
build_src_filter = ${env.build_src_filter} +<sensor/>
build_flags =
    -DLIGHT_SENSOR_PIN=GPIO_NUM_5
    -DLIGHT_SENSOR_CONTROL_PIN=GPIO_NUM_39

[env:sensor]
extends = sensor
build_type = release
build_flags =
    ${esp32_release.build_flags}
    ${sensor.build_flags}

[env:sensor_debug]
extends = sensor
build_type = debug
build_flags =
    ${esp32_debug.build_flags}
    ${sensor.build_flags}

[open_sensor]
extends = esp32_common, s2mini
build_src_filter = ${env.build_src_filter} +<open_sensor/>
build_flags =
    -DLIGHT_SENSOR_PIN=GPIO_NUM_5
    -DLIGHT_SENSOR_CONTROL_PIN=GPIO_NUM_39
    -DBATTERY_SENSOR_PIN=GPIO_NUM_7
    -DOPEN_SENSOR_PIN=GPIO_NUM_18

[env:open_sensor]
extends = open_sensor
build_type = release
build_flags =
    ${esp32_release.build_flags}
    ${open_sensor.build_flags}

[env:open_sensor_debug]
extends = open_sensor
build_type = debug
build_flags =
    ${esp32_debug.build_flags}
    ${open_sensor.build_flags}

[light_sensor]
extends = esp32_common, s2mini
build_src_filter = ${env.build_src_filter} +<light_sensor/>
build_flags =
    -DLIGHT_SENSOR_PIN=GPIO_NUM_5
    -DLIGHT_SENSOR_CONTROL_PIN=GPIO_NUM_39
    -DBATTERY_SENSOR_PIN=GPIO_NUM_7

[env:light_sensor]
extends = light_sensor
build_type = release
build_flags =
    ${esp32_release.build_flags}
    ${light_sensor.build_flags}

[env:light_sensor_debug]
extends = light_sensor
build_type = debug
build_flags =
    ${esp32_debug.build_flags}
    ${light_sensor.build_flags}
